package me.bitfrom.storioexample.database.entities;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteColumn;
import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteType;

import me.bitfrom.storioexample.database.QuotesContract;

@StorIOSQLiteType(table = QuotesContract.TABLE)
public class Quote {

    @Nullable
    @StorIOSQLiteColumn(name = QuotesContract._ID, key = true)
    Long id;

    @NonNull
    @StorIOSQLiteColumn(name = QuotesContract.CONTENT)
    String content;

    //For autogenerated code
    Quote() {

    }

    private Quote(@Nullable Long id, @NonNull String content) {
        this.id = id;
        this.content = content;
    }

    @NonNull
    public static Quote newQuote(@Nullable Long id, @NonNull String content) {
        return new Quote(id, content);
    }

    @NonNull
    public static Quote newQuote(@NonNull String content) {
        return new Quote(null, content);
    }

    @Nullable
    public Long getId() {
        return id;
    }

    @NonNull
    public String getContent() {
        return content;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Quote quote = (Quote) o;

        if (id != null ? !id.equals(quote.id) : quote.id != null) return false;
        return content.equals(quote.content);
    }

    @Override
    public int hashCode() {
        int result = id != null ? id.hashCode() : 0;
        result = 31 * result + content.hashCode();

        return result;
    }

    @Override
    public String toString() {
        return "Quote { " +
                "id = " + id +
                ", content = " + content + " }";
    }
}
